@use "variables" as variables;

$accent-color: map-get(variables.$colors, Accent);
$danger-color: map-get(variables.$colors, Danger);
$success-color: map-get(variables.$colors, Success);
$neutral-color: map-get(variables.$colors, Neutral);
$text-color: map-get(variables.$colors, Text);
$canvas-color: map-get(variables.$colors, Canvas);

@layer exercices {
  .boxes {
    display: grid;
    gap: 16px;
    grid-template-columns: repeat(auto-fit, 200px);
    .box {
      border: solid 1px;
      width: 200px;
      aspect-ratio: 1;
      display: flex;
      flex-flow: row wrap;
      align-items: center;
      justify-content: center;
      align-content: center;
      border-radius: 8px;
      gap: 8px;
      border-width: 2px;
      border-color: transparent;
      background-color: $canvas-color;
      .item {
        width: 80px;
        aspect-ratio: 1;
        border-radius: 8px;
        background-color: gainsboro;
        &.pick-me-up {
          background-color: transparentize($accent-color, 0.6);
        }
      }
    }
  }

  // Exercice 1
  .ex1 {
    .box {
      // << SOLUTION >>
      &:has(.pick-me-up) {
        border-color: $danger-color;
      }
    }
  }

  // Exercice 2
  .ex2 {
    // Let's play!
    .highlight {
      color: darken($accent-color, 15%);
      text-decoration: underline;
      text-underline-offset: 2px;
    }
    ul.todos-list {
      // << SOLUTION >>
      &:has(li.highlight:first-child) {
        li {
          list-style: square;
          &::marker {
            color: $danger-color;
          }
        }
      }
      &:has(li:nth-child(5)) {
        padding: 24px 36px;
        background-color: $neutral-color;
      }
    }
  }

  // Exercice 3
  .ex3 {
    ul {
      margin-inline: auto;
      padding: 8px;
      display: flex;
      gap: 8px;
      padding: 0;
      margin: 0;
      list-style: none;
      li {
        // Evidemment, ceci n'est pas accessible !
        cursor: pointer;
        width: 24px;
        aspect-ratio: 1;
        border-radius: 6px;
        background-color: gainsboro;
        transition: transform 200ms ease, background-color 100ms linear;

        // << SOLUTION >>
        &:hover {
          background-color: $accent-color;
        }

        &:has(+ :hover),
        &:hover + li {
          transform: scale(0.85) rotate(0.5turn);
          background-color: $danger-color;
        }
      }
    }
  }

  // Exercice 4
  .ex4 {
    label {
      display: block;
      margin-block-end: 8px;
    }
    input[type="checkbox"] {
      width: 1.6rem;
      height: 1.6rem;
      accent-color: lighten(map-get(variables.$colors, Accent), 25%);
    }
    button[type="submit"] {
      border: none;
      background-color: map-get(variables.$colors, Accent);
      color: map-get(variables.$colors, Canvas);
      font-size: inherit;
      padding: 8px;
      border-radius: 6px;
      cursor: pointer;
      transition: background-color 200ms linear;
      &:focus-visible,
      &:hover {
        background-color: darken(map-get(variables.$colors, Accent), 10%);
      }
    }

    // << SOLUTION >>
    label:has(:not(:checked)) + button {
      display: none;
    }
  }

  // Exercice 5
  .ex5 {
    .grid {
      width: 200px;
      display: grid;
      gap: 4px;
      grid-template-columns: repeat(2, 1fr);

      .item {
        background-color: $accent-color;
        height: 30px;
      }

      // << SOLUTION >>
      &:has(.item:last-child:nth-child(odd)) {
        grid-template-columns: repeat(3, 1fr);
      }
    }
  }

  .ex6 {
    figure {
      padding: 24px;
      margin: 0;
      background-color: $neutral-color;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 12px 8px;
      & + figure {
        margin-block-start: 16px;
      }
      figcaption {
        font-size: 0.9em;
        grid-column: span 2;
      }
      img {
        max-width: 100%;
        height: 100%;
        object-fit: cover;
      }

      // << SOLUTION >>
      &:has(img:not([alt])) {
        outline-offset: 2px;
        outline: solid 2px $danger-color;
      }
    }
  }

  .ex7 {
    form {
      margin-block: 24px 8px;
      max-inline-size: 420px;
      padding: 24px;
      border-radius: 6px;
      border: solid 1px lighten($accent-color, 40%);
      background-color: $neutral-color;
      box-shadow: 0 3px 10px -3px transparentize($text-color, 0.7);

      .form-title {
        font-weight: 600;
        text-align: center;
        color: $accent-color;
        margin-block: 8px 16px;
      }
      .error-message {
        display: none;
        margin: 6px 0 0;
      }
      .error-message + .form-input {
        margin-block-start: 16px;
      }
      .form-input {
        display: grid;
        gap: 4px;
        input {
          border-radius: 4px;
          border: solid 2px lighten($accent-color, 40%);
          padding: 8px;
          font: inherit;
        }
      }

      button[type="submit"] {
        appearance: none;
        display: block;
        margin-inline-start: auto;
        margin-block-start: 16px;
        font: inherit;
        border: none;
        cursor: pointer;
        padding: 6px 12px;
        border-radius: 4px;
        color: $canvas-color;
        background-color: $accent-color;
        transition: background-color 200ms linear;
        &:hover,
        &:focus-visible {
          background-color: darken($accent-color, 10%);
        }
      }

      // << SOLUTION >>
      &:has(:user-valid):not(:has(:invalid)) {
        border-color: $success-color;

        .form-title {
          color: $success-color;
        }

        button[type="submit"] {
          background-color: $success-color;
          &:hover,
          &:focus-visible {
            background-color: lighten($success-color, 5%);
          }
        }
      }

      .form-input:has(:user-invalid) {
        input {
          border-color: $danger-color;
        }
        label {
          font-weight: bold;
          color: $danger-color;
        }
        & + .error-message {
          display: block;
        }
      }

      .form-input:has(:user-valid) {
        input {
          border-color: $success-color;
        }
        label {
          font-weight: bold;
          color: $success-color;
        }
      }
    }
  }
}
